// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using job_coaching_blazor_server.Data;

#nullable disable

namespace job_coaching_blazor_server.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230620083453_update_postid_duration_added_appointments_table")]
    partial class update_postid_duration_added_appointments_table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("job_coaching_blazor_server.Data.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("AppointmentDurationMinutes")
                        .HasColumnType("int");

                    b.Property<string>("HelpSeekerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HelperEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URlId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserPostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserPostId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("job_coaching_blazor_server.Data.Models.UserPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequiredHelp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeOfCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearsOfExperience")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UsersPosts");
                });

            modelBuilder.Entity("job_coaching_blazor_server.Data.Models.Appointment", b =>
                {
                    b.HasOne("job_coaching_blazor_server.Data.Models.UserPost", "UserPost")
                        .WithMany()
                        .HasForeignKey("UserPostId");

                    b.Navigation("UserPost");
                });
#pragma warning restore 612, 618
        }
    }
}
